name: Deploy to ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  CLUSTER: ${{ secrets.CLUSTER_NAME }}
  SERVICE: ${{ secrets.SERVICE_NAME }}
  TASK_FAMILY: ${{ secrets.TASK_FAMILY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag Docker image
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest"
          docker build -t $IMAGE_URI .
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Push Docker image to ECR
        run: |
          docker push $IMAGE_URI

      - name: Register new ECS task definition
        id: task-def
        run: |
          TASK_DEF=$(aws ecs describe-task-definition --task-definition $TASK_FAMILY)
          NEW_DEF=$(echo $TASK_DEF | jq --arg IMAGE "$IMAGE_URI" '
            .taskDefinition |
            {
              family: .family,
              networkMode: .networkMode,
              requiresCompatibilities: .requiresCompatibilities,
              cpu: .cpu,
              memory: .memory,
              executionRoleArn: .executionRoleArn,
              containerDefinitions: (
                .containerDefinitions | map(
                  .image = $IMAGE
                )
              )
            }')
          echo "$NEW_DEF" > new-task-def.json
          aws ecs register-task-definition --cli-input-json file://new-task-def.json

      - name: Update ECS service with new task def
        run: |
          REVISION=$(aws ecs describe-task-definition --task-definition $TASK_FAMILY --query 'taskDefinition.revision' --output text)
          aws ecs update-service --cluster $CLUSTER --service $SERVICE --task-definition $TASK_FAMILY:$REVISION
